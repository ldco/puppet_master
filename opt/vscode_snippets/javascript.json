{
    // Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and 
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
    // same ids are connected.
    // Example:
    // "Print to console": {
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }

    "optionValue": {
        "prefix": "optionValue",
        "body": [
            "let e = document.getElementById(\"$0\");",
            "let id = e.options[e.selectedIndex].value;"
        ],
        "description": "Get Option Value"

    },
    "optionText": {
        "prefix": "optionText",
        "body": [
            "let e = document.getElementById(\"$0\");",
            "let id = e.options[e.selectedIndex].text;"
        ],
        "description": "Get Option Text"
    },
    "ajax": {
        "prefix": "ajax",
        "body": [
            "let ajx = new XMLHttpRequest();",
            "$2",
            "ajx.onreadystatechange = function() {",
            "if (this.readyState == 4 && this.status == 200) {",
            "let fromDB = ajx.responseText;",
            "document.getElementById(\"mainEventDiv\").innerHTML = fromDB;",
            "}",
            "};",
            " ajx.open(\"POST\", \"getData.php\", true);",
            "ajx.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");",
            "ajx.send(\"id=\" + id + \"id2=\" + id2);",

        ],
        "description": "ajax"
    },
    "getElementById": {
        "prefix": "getById",
        "body": [
            "document.getElementById(\"$0\");"
        ],
        "description": "getElementById"
    },
    "getElementsByClassName": {
        "prefix": "getByClassName",
        "body": [
            "document.getElementsByClassName(\"$0\");"
        ],
        "description": "getElementsByClassName"
    },
    "getElementsByTagName": {
        "prefix": "getByTagName",
        "body": [
            "document.getElementsByTagName(\"$0\");"
        ],
        "description": "getElementsByTagName"
    },
    "getElementsByName": {
        "prefix": "getByName",
        "body": [
            "document.getElementsByName(\"$0\");"
        ],
        "description": "getElementsByName"
    },
    "classListAdd": {
        "prefix": "classAdd",
        "body": [
            "classList.add(\"$0\");"

        ],
        "description": "classListAdd"
    },
    "classListContains": {
        "prefix": "classContains",
        "body": [
            "classList.contains(\"$0\");"
        ],
        "description": "classListContains"
    },
    "classListRemove": {
        "prefix": "classRemove",
        "body": [
            "classList.remove(\"$0\");"
        ],
        "description": "classListRemove"
    },
    "classListToggle": {
        "prefix": "classToggle",
        "body": [
            "classList.toggle(\"$0\", true);"
        ],
        "description": "classListToggle"
    },
    "checkListToArray": {
        "prefix": "checkToArray",
        "body": [
            "const arr = Array",
            ".from(document.querySelectorAll('.$0getParticipantsFromDB'))",
            " .filter((checkbox) => checkbox.checked)",
            "  .map((checkbox) => checkbox.value);"
        ],
        "description": "classListToggle"
    }

}