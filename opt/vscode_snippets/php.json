{
    "echoSingle": {
        "prefix": "eS",
        "body": [
            "echo '$0';"
        ],
        "description": "echo single quotes"
    },
    "echoDouble": {
        "prefix": "eD",
        "body": [
            "echo \"$0{\\$}\";"
        ],
        "description": "echo double quotes"
    },
    "echoDiv": {
        "prefix": "eDiv",
        "body": [
            "echo \"<div id='' class='' onclick=''></div>\";"
        ],
        "description": "echo Div"
    },
    "echoSelect": {
        "prefix": "eSelect",
        "body": [
            "echo \"<select id='$0' class='$1' onchange='$2'>\";",
            "echo \"<option value='$3'></option>\";",
            "echo \"<option value='$4'></option>\";",
            "echo \"<option value='$5'></option>\";",
            "echo \"<option value='$6'></option>\";",
            "echo \"</select>\";",
        ],
        "description": "echo Div"
    },
    "sql secure connection": {
        "prefix": "sqlcon",
        "body": [
            "\\$conn = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);",
            "\\$conn->set_charset('utf8mb4');",
            "\\$id = mysqli_real_escape_string(\\$conn, \\$_POST['id']);",
            "if (mysqli_connect_errno()) {",
            "printf(\"Connect failed: %s\\n\", mysqli_connect_error());",
            "exit();}",
            "\\$sql = \"SELECT * from $1table WHERE id=?;\";",
            "if (\\$stmt = \\$conn->prepare(\\$sql)) {",
            "\\$stmt->bind_param(\"s\", \\$id);",
            "\\$stmt->execute();",
            "\\$result = \\$stmt->get_result();",
            "while (\\$row = \\$result->fetch_assoc()) {",
            "echo \"$2<option value='{\\$row['id']}'>{\\$row['name']},<option>\";}",
            "\\$stmt->close();}",
            "else {",
            "echo \"Error: \" . \\$sql . \"<br>\" . \\$conn->error;}",
            "\\$conn->close();"
        ],
        "description": "sql Prepared Statements connection"
    },
    "sql secure delete": {
        "prefix": "sqlcondelete",
        "body": [
            "\\$conn = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);",
            "\\$conn->set_charset('utf8mb4');",
            "\\$id = mysqli_real_escape_string(\\$conn, \\$_POST['id']);",
            "if (mysqli_connect_errno()) {",
            "printf(\"Connect failed: %s\\n\", mysqli_connect_error());",
            "exit();}",
            "\\$sql = \"DELETE FROM $1table WHERE id = ?\";",
            "if (\\$stmt = \\$conn->prepare(\\$sql)) {",
            "\\$stmt->bind_param(\"s\", \\$id);",
            "\\$stmt->execute();",
            "\\$stmt->close();",
            "} else {",
            "echo \"Error: \" . \\$sql . \"<br>\" . \\$conn->error;}",
            "\\$conn->close();",
        ],
        "description": "sql Prepared Statements connection"
    },
    "sql secure select all": {
        "prefix": "sqlcondselectall",
        "body": [
            "\\$conn = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);",
            "\\$conn->set_charset('utf8mb4');",
            "if (\\$conn->connect_error) {",
            "die(\"Connection failed: \" . \\$conn->connect_error);};",
            "\\$sql = \"SELECT * from weightcats\";",
            "\\$result = \\$conn->query(\\$sql);",
            "if (\\$result) {",
            "while (\\$row = \\$result->fetch_assoc()) {}",
            "} else {",
            "echo \"Error: \" . \\$sql . \"<br>\" . \\$conn->error;}",
            "\\$conn->close();"
        ],
        "description": "sql Prepared Statements connection"
    },
    "root folder": {
        "prefix": "root",
        "body": [
            "dirname($_SERVER['DOCUMENT_ROOT'], 1$0)"
        ],
        "description": "root folder dirname"
    },
    "get file content": {
        "prefix": "fileGet",
        "body": [
            "\\$_json = file_get_contents(\"json.json\");",
            "\\$json = json_decode(\\$_json, true);"
        ],
        "description": "get file content"
    },
    "write to file": {
        "prefix": "fileWrite",
        "body": [
            "\\$jsondata = json_encode(\\$arr, JSON_UNESCAPED_UNICODE)",
            "file_put_contents(\\$myFile, \\$jsondata)",
        ],
        "description": "write to file"
    },
    "htmlOneTagBuilder": {
        "prefix": "hh",
        "body": [
            "Html::makeOne(\"content\", \"$0tag\", \"$1id\", \"$2class\", \"$3attr\");"
        ],
        "description": "Html One Tag Builder"
    },
    "htmlBuilder": {
        "prefix": "hb",
        "body": [
            "Html::make(\"content\", \"$0tag\", \"$1id\", \"$2class\", \"$3attr\");",
            "Html::close(\"$0tag\");"
        ],
        "description": "Html Builder Class"
    },
    "classBuilder": {
        "prefix": "cclass",
        "body": [
            "class Class extends AnotherClass implements Interface",
            "{",
            "private $var;",
            "function __construct($var) {",
            "this->var = $var;}",
            "public function make() {}",
            "function __destruct() {}",
            "};"
        ],
        "description": "class Builder"
    },
    "classBuilder": {
        "prefix": "DB",
        "body": [
            "use sys\\Controller\\DB;",
            "require_once PM_ROOT . PM_SYS_FOLDER . \"/Controller/DB.class.ctrl.php\";",
            "\\$DB = new DB();",
            "\\$result = \\$DB->queryRaw(\"SELECT * FROM pm_loc\");",
            "if (\\$result) {",
            "    while (\\$row = \\$result->fetch_assoc()) {",
            "}",
            "}",
            "\/*if (\\$result && (\\$row = \\$result->fetch_assoc())) {",
            "} else {",
            " return;",
            "}*\/"
        ],
        "description": "Puppet Master DB"
    }
}