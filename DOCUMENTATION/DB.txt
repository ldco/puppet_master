По соображениям скорости рекомендуется хранить один экземпляр класса на движок в глобальной переменной.
Иначе будет по соединению на каждый PHP что довольно затратно по времени.

Зависимости:
Для инициализации необходимо вызвать config.ini.php перед созданием экземпляра класса.

Старт:
При создании используются параметры по-умолчанию из config.ini.php
При необходимости можно указать свои в порядке:
host, user,password,database,charset 

Использование:
1) Метод query
Обязательным является только первый параметр - строка запроса.
Метод поддерживает работу с prepared statements в виде перечисления переменных по порядку квантификаторов или через ассоциативный массив.
Пример:
DB->query("SELECT ? FROM `table` WHERE `filterfield` = ?", 'field', 1)

2) Метод queryRaw
Принимает единственный параметр - строку запроса.

3) Метод fetchAll
После выполнения запроса возвращает результат в виде массива
[0 => ['field' => 'field_value'].. , 1 => ['field' => 'field_value']]

4) Метод fetchArray
После выполнения запроса возвращает следующую строку результата запроса в виде массива ['field' => 'field_value']

5) Метод numRows
После выполнения запроса возвращает количество найденных записей

6) Метод affectedRows
После выполнения запроса на обновление или добавление записей возвращает количество изменённых записей

7) Метод getConnection
Возвращает указатель на структуру соединения. Необходимо для самостоятельного экранирования входных данных.
